<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml" xmlns:viewmodels="clr-namespace:App1.ViewModels" xmlns:converters="clr-namespace:App1.Behaviors" xmlns:model="clr-namespace:App1.Models" x:DataType="viewmodels:EditViewModel"
             x:Class="App1.Views.EditPage"
             BackgroundColor="#292929"
             NavigationPage.HasNavigationBar="False"
             Shell.NavBarIsVisible="False"
             Shell.TabBarIsVisible="False"
             xmlns:behavior="clr-namespace:App1.Behaviors">
    <ContentPage.Resources>
        <ResourceDictionary>
            <behavior:PriorityToImageConverter x:Key="PriorityToImageConverter" />
            <Style TargetType="Editor" x:Key="NoUnderlineEntry">
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="HeightRequest" Value="40" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="PlaceholderColor" Value="#959595" />
                <Setter Property="TextColor" Value="AliceBlue" />
            </Style>
            <converters:DateToTextConverter x:Key="DateToTextConverter" />
            <converters:StringToColorConverter x:Key="StringToColorConverter"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <StackLayout Padding="15,40,15,0" x:Name="notificationTest">
            <StackLayout>
                <Grid HeightRequest="100">
                    <ImageButton Source="back.png" BackgroundColor="Color.Transparent" HorizontalOptions="StartAndExpand" Command="{Binding CancelCommand}"/>
                    <StackLayout Orientation="Horizontal" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                        <StackLayout.GestureRecognizers>
                            <TapGestureRecognizer Command="{Binding FoldersPopupCommand}" />
                        </StackLayout.GestureRecognizers>
                        <Label Text="{Binding Assignment.FolderName}" FontSize="20" TextColor="AliceBlue" VerticalOptions="CenterAndExpand"/>
                        <Image Source="arrow_left_right" HorizontalOptions="EndAndExpand"/>
                    </StackLayout>
                    <ImageButton Source="trash" BackgroundColor="Color.Transparent" HorizontalOptions="EndAndExpand" Command="{Binding DeleteCommand}"/>
                </Grid>
            </StackLayout>

            <StackLayout Orientation="Horizontal">
                <ImageButton BackgroundColor="Color.Transparent" HorizontalOptions="StartAndExpand" Command="{Binding HandleChangeIsCompletedCommand}" Margin="3,0,0,0">
                    <ImageButton.Triggers>
                        <DataTrigger TargetType="ImageButton" Binding="{Binding Assignment.IsCompleted}" Value="True">
                            <Setter Property="Source" Value="done.png" />
                        </DataTrigger>
                        <DataTrigger TargetType="ImageButton" Binding="{Binding Assignment.IsCompleted}" Value="False">
                            <Setter Property="Source" Value="priority.png" />
                        </DataTrigger>
                    </ImageButton.Triggers>
                </ImageButton>
                <Label Text="{Binding Assignment.ExecutionDate, Converter={StaticResource DateToTextConverter}}" TextColor="#EE82FF" FontAttributes="Bold" FontSize="16" HorizontalOptions="CenterAndExpand">
                    <Label.GestureRecognizers>
                        <TapGestureRecognizer Command="{Binding NotificationPopupCommand}"/>
                    </Label.GestureRecognizers>
                </Label>
                <ImageButton Source="{Binding SelectedPriority, Converter={StaticResource PriorityToImageConverter}}" BackgroundColor="Color.Transparent" Command="{Binding PriorityPopupCommand}" HorizontalOptions="EndAndExpand" Padding="-20"/>
            </StackLayout>

            <StackLayout Margin="0,10,0,0">
                <Entry Placeholder="Расскажите, какие у Вас планы?" x:Name="EntryName" Text="{Binding Assignment.Name, Mode=TwoWay}" Style="{StaticResource NoUnderlineEntry}" FontSize="20" HeightRequest="50" />
                <Label x:Name="LongNameAlert" Text="Имя задачи должно быть не длиннее 100 символов" TextColor="Red" IsVisible="false"/>
                <Label x:Name="LongDescAlert" Text="Описание задачи должно быть не длиннее 500 символов" TextColor="Red" IsVisible="false"/>
                <Editor Placeholder="Добавьте дополнительное описание Вашей задачи" Text="{Binding Assignment.Description, Mode=TwoWay}" Style="{StaticResource NoUnderlineEntry}" HeightRequest="100"/>
            </StackLayout>
            <StackLayout Padding="10">
                <CollectionView  ItemsSource="{Binding ChildList}">
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <StackLayout x:DataType="model:AssignmentModel" Padding="0, 0, 0, 10" HorizontalOptions="FillAndExpand" VerticalOptions="FillAndExpand">
                                <SwipeView BackgroundColor="Color.transparent">
                                    <SwipeView.GestureRecognizers>
                                        <SwipeGestureRecognizer Direction="Left" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:EditViewModel}}, Path=DeleteChildCommand}" CommandParameter="{Binding .}" />
                                        <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:EditViewModel}}, Path=EditAssignmentCommand}" CommandParameter="{Binding .}" />
                                    </SwipeView.GestureRecognizers>
                                    <SwipeView.RightItems>
                                        <SwipeItems>
                                            <SwipeItem />
                                        </SwipeItems>
                                    </SwipeView.RightItems>

                                    <SwipeView.Content>
                                        <Frame CornerRadius="12" BackgroundColor="#4A4A4A" Padding="15,5,10,5">
                                            <StackLayout Orientation="Horizontal">
                                                <ImageButton Source="circle.png" WidthRequest="19" BackgroundColor="Color.Transparent" Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:EditViewModel}}, Path=ChangeIsCompletedCommand}" CommandParameter="{Binding .}" >
                                                    <ImageButton.Triggers>
                                                        <DataTrigger TargetType="ImageButton" Binding="{Binding IsCompleted}" Value="True">
                                                            <Setter Property="Source" Value="done.png" />
                                                        </DataTrigger>
                                                    </ImageButton.Triggers>
                                                </ImageButton>
                                                <StackLayout VerticalOptions="Center" Padding="5, 3, 0, 3" Spacing="1">
                                                    <Label Text="{Binding Name}" TextColor="AliceBlue" FontSize="13"/>
                                                    <StackLayout Orientation="Horizontal" Spacing="5">
                                                        <Image WidthRequest="15">
                                                            <Image.Triggers>
                                                                <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Нет">
                                                                    <Setter Property="Source" Value="without.png"/>
                                                                </DataTrigger>
                                                                <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Высокий">
                                                                    <Setter Property="Source" Value="high.png"/>
                                                                </DataTrigger>
                                                                <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Средний">
                                                                    <Setter Property="Source" Value="medium.png"/>
                                                                </DataTrigger>
                                                                <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Низкий">
                                                                    <Setter Property="Source" Value="low.png"/>
                                                                </DataTrigger>
                                                            </Image.Triggers>
                                                        </Image>
                                                        <Image BackgroundColor="Color.Transparent" WidthRequest="15">
                                                            <Image.Triggers>
                                                                <DataTrigger TargetType="Image" Binding="{Binding HasNotification}" Value="True">
                                                                    <Setter Property="Source" Value="clock_green.png" />
                                                                </DataTrigger>
                                                                <DataTrigger TargetType="Image" Binding="{Binding HasNotification}" Value="False">
                                                                    <Setter Property="Source" Value="time.png" />
                                                                </DataTrigger>
                                                                <DataTrigger TargetType="Image" Binding="{Binding IsOverdue}" Value="True">
                                                                    <Setter Property="Source" Value="clock1.png" />
                                                                </DataTrigger>
                                                            </Image.Triggers>
                                                        </Image>
                                                        <!--<Label Text="{Binding HasChild}"/>-->
                                                        <Label Text="{Binding ExecutionDate, StringFormat='{0:dd.MM.yy HH:mm}'}" WidthRequest="90" TextColor="AliceBlue" FontSize="12" Padding="-3,3,0,0" VerticalOptions="Center"/>
                                                        <!--<Label Text="{Binding IsOverdue}"  TextColor="AliceBlue" FontSize="12" Padding="-3,3,0,0"/>-->
                                                        <!--<CollectionView  ItemsSource="{Binding Tags}" HeightRequest="10" >
                                                        <CollectionView.ItemsLayout>
                                                            <GridItemsLayout Orientation="Horizontal" />
                                                        </CollectionView.ItemsLayout>
                                                        <CollectionView.ItemTemplate>
                                                            <DataTemplate>
                                                                <StackLayout x:DataType="model:TagModel" Margin="5">
                                                                    <Frame  BackgroundColor="{Binding TagColor, Converter={StaticResource StringToColorConverter}}" Padding="2,8,10,8" CornerRadius="50" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                                                                        <StackLayout Orientation="Horizontal" HeightRequest="5">
                                                                            <Image Source="dot.png" VerticalOptions="Center" Margin="3,0,0,0"/>
                                                                            <Label Text="{Binding Name}" TextColor="AliceBlue" FontSize="16" Margin="0,-10" BackgroundColor="Color.Transparent"/>
                                                                        </StackLayout>
                                                                    </Frame>
                                                                </StackLayout>
                                                            </DataTemplate>
                                                        </CollectionView.ItemTemplate>
                                                    </CollectionView>-->

                                                    </StackLayout>
                                                </StackLayout>
                                            </StackLayout>
                                        </Frame>
                                    </SwipeView.Content>
                                </SwipeView>
                            </StackLayout>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </StackLayout>
            <CollectionView ItemsLayout="HorizontalList" ItemsSource="{Binding TagList}" HeightRequest="35">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <StackLayout Margin="5,0" x:DataType="model:TagModel" Padding="0" Orientation="Horizontal">
                            <Frame BackgroundColor="{Binding TagColor, Converter={StaticResource StringToColorConverter}}" Padding="2,8,5,8" CornerRadius="50" HorizontalOptions="StartAndExpand" VerticalOptions="StartAndExpand">
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type viewmodels:EditViewModel}}, Path=DeleteTagCommand}" CommandParameter="{Binding .}" />
                                </Frame.GestureRecognizers>
                                <StackLayout Orientation="Horizontal" HeightRequest="5">
                                    <Image Source="dot.png" VerticalOptions="Center" Margin="3,0,0,0"/>
                                    <Label Text="{Binding Name}" TextColor="AliceBlue" FontSize="16" Margin="0,-10" BackgroundColor="Color.Transparent"/>
                                </StackLayout>

                            </Frame>
                        </StackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
            <StackLayout Orientation="Horizontal" Margin="0,0,0,20" VerticalOptions="Start">
                <ImageButton x:Name="tags" Source="tags.png" BackgroundColor="Color.Transparent" Command="{Binding LoadTagPopupCommand}"/>
                <ImageButton x:Name="layout_list" Source="layout_list.png" Margin="5,0,0,0" BackgroundColor="Color.Transparent" Command="{Binding AddChildCommand}" />
                <ImageButton Source="save_task.png" BackgroundColor="Color.Transparent" Command="{Binding SaveCommand}" Clicked="ButtonSave_Clicked" HorizontalOptions="EndAndExpand"/>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>