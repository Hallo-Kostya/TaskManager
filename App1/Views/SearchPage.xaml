<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:App1.ViewModels"
             xmlns:model="clr-namespace:App1.Models" 
             xmlns:behavior="clr-namespace:App1.Behaviors" 
             xmlns:local1="clr-namespace:App1.Converters"
             x:Class="App1.Views.SearchPage"
             BackgroundImageSource="background.png">

    <ContentPage.Resources>
        <ResourceDictionary>
            <local1:BoolToColorConverter x:Key="BoolToColorConverter" />
            <local1:BoolToTextColorConverter x:Key="BoolToTextColorConverter" />
            <local1:BoolToTagColorConverter x:Key="BoolToTagColorConverter" />
            <local1:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <behavior:StringToColorConverter x:Key="StringToColorConverter" />
            <Style x:Key="ImageButtonStyle" TargetType="ImageButton">
                <Setter Property="BackgroundColor" Value="Black"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="WidthRequest" Value="50"/>
                <Setter Property="Command" Value="{Binding Source={RelativeSource AncestorType={x:Type local:AssignmentViewModel}}, Path=ChangeIsCompletedCommand}"/>
                <Setter Property="CommandParameter" Value="{Binding .}"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ContentPage.Content>
        <StackLayout>
            <SearchBar x:Name="searchAssignment"
                       Placeholder="Поиск"
                       Text="{Binding SearchedText, Mode=TwoWay}"
                       SearchCommand="{Binding SearchBarTextChangedCommand}"
                       BackgroundColor="Black"
                       TextColor="AliceBlue"
                       PlaceholderColor="#ababab">
                <SearchBar.Behaviors>
                    <behavior:EventToCommandBehavior EventName="TextChanged" Command=" {Binding SearchBarTextChangedCommand}" />
                </SearchBar.Behaviors>
            </SearchBar>
            <CollectionView x:Name="SearchList" ItemsSource="{Binding SearchedAssignments}" SelectionMode="None">
                <CollectionView.ItemTemplate>
                    <DataTemplate>
                        <StackLayout x:DataType="model:AssignmentModel" Padding="10, 10, 10, 0">
                            <StackLayout.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding Source={RelativeSource AncestorType={x:Type local:SearchPageViewModel}}, Path=EditCommand}" CommandParameter="{Binding .}" />
                            </StackLayout.GestureRecognizers>

                            <Frame CornerRadius="25" BackgroundColor="{Binding IsCompleted, Converter={StaticResource BoolToColorConverter}}" Padding="15,10,10,10">
                                <Frame.Triggers>
                                    <DataTrigger TargetType="Frame" Binding="{Binding IsOverdue}" Value="True">
                                        <Setter Property="BackgroundColor" Value="#90000000"/>
                                    </DataTrigger>
                                </Frame.Triggers>
                                <StackLayout Orientation="Horizontal">
                                    <Image Source="circle.png" BackgroundColor="Color.Transparent">
                                        <Image.Triggers>
                                            <DataTrigger TargetType="Image" Binding="{Binding IsCompleted}" Value="True">
                                                <Setter Property="Source" Value="done.png" />
                                            </DataTrigger>
                                            <DataTrigger TargetType="Image" Binding="{Binding IsOverdue}" Value="True">
                                                <Setter Property="Source" Value="expired.png" />
                                            </DataTrigger>
                                        </Image.Triggers>
                                    </Image>
                                    <StackLayout VerticalOptions="Center" Padding="10, 3, 0, 3">
                                        <Label Text="{Binding Name}" TextColor="{Binding IsCompleted, Converter={StaticResource BoolToTextColorConverter}}" FontSize="16">
                                            <Label.Triggers>
                                                <DataTrigger TargetType="Label" Binding="{Binding IsOverdue}" Value="True">
                                                    <Setter Property="TextColor" Value="#ADADAD"/>
                                                </DataTrigger>
                                            </Label.Triggers>
                                        </Label>
                                        <StackLayout Orientation="Horizontal" HorizontalOptions="StartAndExpand">
                                            <Image WidthRequest="20">
                                                <Image.Triggers>
                                                    <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Нет">
                                                        <Setter Property="Source" Value="without.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Высокий">
                                                        <Setter Property="Source" Value="high.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Средний">
                                                        <Setter Property="Source" Value="medium.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="Image" Binding="{Binding Priority}" Value="Низкий">
                                                        <Setter Property="Source" Value="low.png"/>
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="Image" Binding="{Binding IsCompleted}" Value="True">
                                                        <Setter Property="Source" Value="eye_gray" />
                                                    </DataTrigger>
                                                </Image.Triggers>
                                            </Image>
                                            <Image BackgroundColor="Color.Transparent" WidthRequest="20">
                                                <Image.Triggers>
                                                    <DataTrigger TargetType="Image" Binding="{Binding HasNotification}" Value="True">
                                                        <Setter Property="Source" Value="clock_green.png" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="Image" Binding="{Binding HasNotification}" Value="False">
                                                        <Setter Property="Source" Value="time.png" />
                                                    </DataTrigger>
                                                    <DataTrigger TargetType="Image" Binding="{Binding IsOverdue}" Value="True">
                                                        <Setter Property="Source" Value="clock1.png" />
                                                    </DataTrigger>
                                                </Image.Triggers>
                                            </Image>
                                            <!--<Image Source="{Binding IsCompleted, Converter={StaticResource BoolToColorConverter}}" BackgroundColor="Color.Transparent" WidthRequest="20"/>-->
                                            <Label Text="{Binding ExecutionDate, StringFormat='{0:dd.MM.yy HH:mm}'}"  TextColor="{Binding IsCompleted, Converter={StaticResource BoolToTextColorConverter}}" WidthRequest="200" FontSize="12" Padding="-3,3,0,0">
                                                <Label.Triggers>
                                                    <DataTrigger TargetType="Label" Binding="{Binding IsOverdue}" Value="True">
                                                        <Setter Property="TextColor" Value="#ADADAD" />
                                                    </DataTrigger>
                                                </Label.Triggers>
                                            </Label>
                                            <CollectionView  ItemsSource="{Binding Tags}" HeightRequest="10" >
                                                <CollectionView.ItemsLayout>
                                                    <GridItemsLayout Orientation="Horizontal" />
                                                </CollectionView.ItemsLayout>
                                                <CollectionView.ItemTemplate>
                                                    <DataTemplate>
                                                        <StackLayout x:DataType="model:TagModel" Margin="5">
                                                            <Frame  BackgroundColor="{Binding TagColor, Converter={StaticResource StringToColorConverter}}" Padding="2,8,10,8" CornerRadius="50" HorizontalOptions="CenterAndExpand" VerticalOptions="CenterAndExpand">
                                                                <StackLayout Orientation="Horizontal" HeightRequest="5">
                                                                    <Image Source="dot.png" VerticalOptions="Center" Margin="3,0,0,0"/>
                                                                    <Label Text="{Binding Name}" TextColor="AliceBlue" FontSize="16" Margin="0,-10" BackgroundColor="Color.Transparent"/>
                                                                </StackLayout>
                                                            </Frame>
                                                        </StackLayout>
                                                    </DataTemplate>
                                                </CollectionView.ItemTemplate>
                                            </CollectionView>
                                        </StackLayout>
                                    </StackLayout>
                                </StackLayout>
                            </Frame>
                        </StackLayout>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>